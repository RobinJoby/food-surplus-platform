services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: food_surplus_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: food_surplus_db
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - food_surplus_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Flask Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: food_surplus_backend
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=mysql+pymysql://app_user:app_password@db:3306/food_surplus_db
      - SECRET_KEY=your-production-secret-key-change-this
      - JWT_SECRET_KEY=your-production-jwt-secret-key-change-this
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    depends_on:
      db:
        condition: service_healthy
    networks:
      - food_surplus_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: food_surplus_frontend
    restart: unless-stopped
    environment:
      - VITE_API_URL=http://localhost:5000
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - food_surplus_network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: food_surplus_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - food_surplus_network

volumes:
  mysql_data:
  backend_uploads:

networks:
  food_surplus_network:
    driver: bridge
