{
  "info": {
    "name": "Food Surplus Distribution System API",
    "description": "Complete API collection for the Food Surplus Distribution System",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\",\n  \"role\": \"donor\",\n  \"phone\": \"+1234567890\",\n  \"address\": \"123 Test St, Test City\",\n  \"latitude\": 40.7128,\n  \"longitude\": -74.0060\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('jwt_token', response.access_token);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"mario@restaurant.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/me",
              "host": ["{{base_url}}"],
              "path": ["users", "me"]
            }
          },
          "response": []
        },
        {
          "name": "Update User Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Name\",\n  \"phone\": \"+1234567891\",\n  \"address\": \"456 Updated St, New City\",\n  \"latitude\": 40.7589,\n  \"longitude\": -73.9851\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/me",
              "host": ["{{base_url}}"],
              "path": ["users", "me"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Food Management",
      "item": [
        {
          "name": "Create Food Item",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Fresh Pasta and Marinara Sauce\",\n  \"description\": \"Leftover pasta from lunch service, enough for 20 people\",\n  \"quantity\": 20,\n  \"unit\": \"servings\",\n  \"pickup_start\": \"2024-10-02T18:00:00\",\n  \"pickup_end\": \"2024-10-02T21:00:00\",\n  \"expiry_date\": \"2024-10-03T22:00:00\",\n  \"location\": \"Mario's Italian Restaurant\",\n  \"latitude\": 40.7589,\n  \"longitude\": -73.9851,\n  \"image_url\": \"https://example.com/pasta.jpg\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/food",
              "host": ["{{base_url}}"],
              "path": ["food"]
            }
          },
          "response": []
        },
        {
          "name": "Get Food Items",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/food?status=available&max_distance=10&page=1&per_page=20",
              "host": ["{{base_url}}"],
              "path": ["food"],
              "query": [
                {
                  "key": "status",
                  "value": "available"
                },
                {
                  "key": "max_distance",
                  "value": "10"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "per_page",
                  "value": "20"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update Food Item Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"completed\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/food/1",
              "host": ["{{base_url}}"],
              "path": ["food", "1"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Pickup Requests",
      "item": [
        {
          "name": "Create Pickup Request",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"food_item_id\": 1,\n  \"message\": \"We can pick this up for our evening meal service. Thank you!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/pickup",
              "host": ["{{base_url}}"],
              "path": ["pickup"]
            }
          },
          "response": []
        },
        {
          "name": "Get Pickup Requests",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/pickup?page=1&per_page=20",
              "host": ["{{base_url}}"],
              "path": ["pickup"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "per_page",
                  "value": "20"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Accept Pickup Request",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"accepted\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/pickup/1",
              "host": ["{{base_url}}"],
              "path": ["pickup", "1"]
            }
          },
          "response": []
        },
        {
          "name": "Reject Pickup Request",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"rejected\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/pickup/1",
              "host": ["{{base_url}}"],
              "path": ["pickup", "1"]
            }
          },
          "response": []
        },
        {
          "name": "Mark as Picked",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"picked\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/pickup/1",
              "host": ["{{base_url}}"],
              "path": ["pickup", "1"]
            }
          },
          "response": []
        },
        {
          "name": "Mark as Completed",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"completed\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/pickup/1",
              "host": ["{{base_url}}"],
              "path": ["pickup", "1"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Notifications",
      "item": [
        {
          "name": "Get Notifications",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/notifications?page=1&per_page=20",
              "host": ["{{base_url}}"],
              "path": ["notifications"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "per_page",
                  "value": "20"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Mark Notification as Read",
          "request": {
            "method": "PUT",
            "header": [],
            "url": {
              "raw": "{{base_url}}/notifications/1/read",
              "host": ["{{base_url}}"],
              "path": ["notifications", "1", "read"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Admin",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/users?page=1&per_page=20&role=donor",
              "host": ["{{base_url}}"],
              "path": ["admin", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "per_page",
                  "value": "20"
                },
                {
                  "key": "role",
                  "value": "donor"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Verification Requests",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/verification-requests?status=pending&page=1&per_page=20",
              "host": ["{{base_url}}"],
              "path": ["admin", "verification-requests"],
              "query": [
                {
                  "key": "status",
                  "value": "pending"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "per_page",
                  "value": "20"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Approve Verification Request",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"approved\",\n  \"admin_notes\": \"Organization verified successfully. All documents are in order.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/verification-requests/1",
              "host": ["{{base_url}}"],
              "path": ["admin", "verification-requests", "1"]
            }
          },
          "response": []
        },
        {
          "name": "Reject Verification Request",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"rejected\",\n  \"admin_notes\": \"Insufficient documentation provided. Please resubmit with proper certificates.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/verification-requests/1",
              "host": ["{{base_url}}"],
              "path": ["admin", "verification-requests", "1"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          },
          "response": []
        }
      ]
    }
  ]
}
